{
  "articles/csharp_coding_standards.html": {
    "href": "articles/csharp_coding_standards.html",
    "title": "C# Coding Standards | Biwen.QuickApi 2.0",
    "keywords": "C# Coding Standards Introduction The coding standard will be used in conjunction with customized version of StyleCop and FxCop [TODO] during both development and build process. This will help ensure that the standard is followed by all developers on the team in a consistent manner. \"Any fool can write code that a computer can understand. Good programmers write code that humans understand\". Martin Fowler. Refactoring: Improving the design of existing code. Purpose The aim of this section is to define a set of C# coding standards to be used by CAPS build team to guarantee maximum legibility, reliability, re-usability and homogeneity of our code. Each section is marked Mandatory or Recommended. Mandatory sections, will be enforced during code reviews as well as tools like StyleCop and FxCop, and code will not be considered complete until it is compliant. Scope This section contains general C# coding standards which can be applied to any type of application developed in C#, based on Framework Design Guidelines. It does not pretend to be a tutorial on C#. It only includes a set of limitations and recommendations focused on clarifying the development. Tools Resharper is a great 3rd party code cleanup and style tool. StyleCop analyzes C# srouce code to enforce a set of style and consistency rules and has been integrated into many 3rd party development tools such as Resharper. FxCop is an application that analyzes managed code assemblies (code that targets the .NET Framework common language runtime) and reports information about the assemblies, such as possible design, localization, performance, and security improvements. C# Stylizer does many of the style rules automatically Highlights of Coding Standards This section is not intended to give a summary of all the coding standards that enabled by our customized StyleCop, but to give a highlight of some rules one will possibly meet in daily coding life. It also provides some recommended however not mandatory(which means not enabled in StyleCop) coding standards. File Layout (Recommended) Only one public class is allowed per file. The file name is derived from the class name. Class : Observer Filename: Observer.cs Class Definition Order (Mandatory) The class definition contains class members in the following order, from less restricted scope (public) to more restrictive (private): Nested types, e.g. classes, enum, struct, etc. Field members, e.g. member variables, const, etc. Member functions Constructors Finalizer (Do not use unless absolutely necessary) Methods (Properties, Events, Operations, Overridables, Static) Private nested types Naming (Mandatory) DO use PascalCasing for all public member, type, and namespace names consisting of multiple words. PropertyDescriptor HtmlTag IOStream NOTE: A special case is made for two-letter acronyms in which both letters are capitalized, e.g. IOStream DO use camelCasing for parameter names. propertyDescriptor htmlTag ioStream DO start with underscore for private fields private readonly Guid _userId = Guid.NewGuid(); DO start static readonly fields, constants with capitalized case private static readonly IEntityAccessor EntityAccessor = null; private const string MetadataName = \"MetadataName\"; DO NOT capitalize each word in so-called closed-form compound words. DO have \"Async\" explicitly in the Async method name to notice people how to use it properly Formatting (Mandatory) DO use spaces over tabs, and always show all spaces/tabs in IDE Tips Visual Studio > TOOLS > Options > Text Editor > C# > Tabs > Insert spaces (Tab size: 4) Visual Studio > Edit > Advanced > View White Space DO add using inside namespace declaration namespace Microsoft.Content.Build.BuildWorker.UnitTest { using System; } DO add a space when: for (var i = 0; i < 1; i++) if (a == b) Cross-platform coding Our code should supports multiple operating systems. Don't assume we only run (and develop) on Windows. Code should be sensitvie to the differences between OS's. Here are some specifics to consider. DO use Enviroment.NewLine instead of hard-coding the line break instead of \\r\\n, as Windows uses \\r\\n and OSX/Linux uses \\n. Note Be aware that thes line-endings may cause problems in code when using @\"\" text blocks with line breaks. DO Use Path.Combine() or Path.DirectorySeparatorChar to separate directories. If this is not possible (such as in scripting), use a forward slash /. Windows is more forgiving than Linux in this regard. Unit tests and functional tests Assembly naming The unit tests for the Microsoft.Foo assembly live in the Microsoft.Foo.Tests assembly. The functional tests for the Microsoft.Foo assmebly live in the Microsoft.Foo.FunctionalTests assmebly. In general there should be exactly one unit test assebmly for each product runtime assembly. In general there should be one functional test assembly per repo. Exceptions can be made for both. Unit test class naming Test class names end with Test and live in the same namespace as the class being tested. For example, the unit tests for the Microsoft.Foo.Boo class would be in a Microsoft.Foo.Boo class in the test assembly. Unit test method naming Unit test method names must be descriptive about what is being tested, under what conditions, and what the expectations are. Pascal casing and underscores can be used to improve readability. The following test names are correct: PublicApiArgumentsShouldHaveNotNullAnnotation Public_api_arguments_should_have_not_null_annotation The following test names are incorrect: Test1 Constructor FormatString GetData Unit test structure The contents of every unit test should be split into three distinct stages, optionally separated by these comments: // Arrange // Act // Assert The crucial thing here is the Act stage is exactly one statement. That one statement is nothing more than a call to the one method that you are trying to test. keeping that one statement as simple as possible is also very important. For example, this is not ideal: int result = myObj.CallSomeMethod(GetComplexParam1(), GetComplexParam2(), GetComplexParam3()); This style is not recomended because way too many things can go wrong in this one statement. All the GetComplexParamN() calls can throw for a variety of reasons unrelated to the test itself. It is thus unclear to someone running into a problem why the failure occured. The ideal pattern is to move the complex parameter building into the `Arrange section: // Arrange P1 p1 = GetComplexParam1(); P2 p2 = GetComplexParam2(); P3 p3 = GetComplexParam3(); // Act int result = myObj.CallSomeMethod(p1, p2, p3); // Assert Assert.AreEqual(1234, result); Now the only reason the line with CallSomeMethod() can fail is if the method itself blew up. Testing exception messages In general testing the specific exception message in a unit test is important. This ensures that the exact desired exception is what is being tested rather than a different exception of the same type. In order to verify the exact exception it is important to verify the message. var ex = Assert.Throws<InvalidOperationException>( () => fruitBasket.GetBananaById(1234)); Assert.Equal( \"1234\", ex.Message); Use xUnit.net's plethora of built-in assertions xUnit.net includes many kinds of assertions – please use the most appropriate one for your test. This will make the tests a lot more readable and also allow the test runner report the best possible errors (whether it's local or the CI machine). For example, these are bad: Assert.Equal(true, someBool); Assert.True(\"abc123\" == someString); Assert.True(list1.Length == list2.Length); for (int i = 0; i < list1.Length; i++) { Assert.True( String.Equals list1[i], list2[i], StringComparison.OrdinalIgnoreCase)); } These are good: Assert.True(someBool); Assert.Equal(\"abc123\", someString); // built-in collection assertions! Assert.Equal(list1, list2, StringComparer.OrdinalIgnoreCase); Parallel tests By default all unit test assemblies should run in parallel mode, which is the default. Unit tests shouldn't depend on any shared state, and so should generally be runnable in parallel. If the tests fail in parallel, the first thing to do is to figure out why; do not just disable parallel tests! For functional tests it is reasonable to disable parallel tests."
  },
  "articles/docfx_getting_started.html": {
    "href": "articles/docfx_getting_started.html",
    "title": "Getting Started with docfx | Biwen.QuickApi 2.0",
    "keywords": "Getting Started with docfx Getting Started This is a seed. docfx is an API documentation generator for .NET, currently support C# and VB. It has the ability to extract triple slash comments out from your source code. What's more, it has syntax to link additional files to API to add additional remarks. docfx will scan your source code and your additional conceptual files and generate a complete HTML documentation website for you. docfx provides the flexibility for you to customize the website through templates. We currently have several embedded templates, including websites containing pure static html pages and also website managed by AngularJS. Click \"View Source\" for an API to route to the source code in GitHub (your API must be pushed to GitHub) docfx provide DNX version for cross platform use. docfx can be used within Visual Studio seamlessly. NOTE offical docfx.msbuild nuget package is now in pre-release version. You can also build your own with source code and use it locally. We support Docfx Flavored Markdown(DFM) for writing conceptual files. DFM is 100% compatible with Github Flavored Markdown(GFM) and add several new features including file inclusion, cross reference, and yaml header."
  },
  "articles/engineering_guidelines.html": {
    "href": "articles/engineering_guidelines.html",
    "title": "Engineering Guidelines | Biwen.QuickApi 2.0",
    "keywords": "Engineering Guidelines Basics Copyright header and license notice All source code files require the following exact header according to its language (please do not make any changes to it). extension: .cs // Licensed to the .NET Foundation under one or more agreements. // The .NET Foundation licenses this file to you under the MIT license. extension: .js // Licensed to the .NET Foundation under one or more agreements. // The .NET Foundation licenses this file to you under the MIT license. extension: .css /** * Licensed to the .NET Foundation under one or more agreements. * The .NET Foundation licenses this file to you under the MIT license. */ extension: .tmpl, .tmpl.partial {{!Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license.}} External dependencies This refers to dependencies on projects (i.e. NuGet packages) outside of the docfx repo, and especially outside of Microsoft. Adding new dependencies require additional approval. Current approved dependencies are: Newtonsoft.Json Jint HtmlAgilityPack Nustache YamlDotNet Code reviews and checkins To help ensure that only the highest quality code makes its way into the project, please submit all your code changes to GitHub as PRs. This includes runtime code changes, unit test updates, and deployment scripts. For example, sending a PR for just an update to a unit test might seem like a waste of time but the unit tests are just as important as the product code and as such, reviewing changes to them is also just as important. The advantages are numerous: improving code quality, more visibility on changes and their potential impact, avoiding duplication of effort, and creating general awareness of progress being made in various areas. In general a PR should be signed off(using the 👍 emoticon) by the Owner of that code. To commit the PR to the repo do not use the Big Green Button. Instead, do a typical push that you would use with Git (e.g. local pull, rebase, merge, push). Source Code Management Branch strategy In general: master has the code for the latest release on NuGet.org. (e.g. 1.0.0, 1.1.0) dev has the code that is being worked on but not yet released. This is the branch into which devs normally submit pull requests and merge changes into. We run daily CI towards dev branch and generate pre-release nuget package, e.g. 1.0.1-alpha-9-abcdefsd. hotfix has the code for fixing master bug after it is released. hotfix changes will be merged back to master and dev once it is verified. Solution and project folder structure and naming Solution files go in the repo root. The default entry point is All.sln. Every project also needs a project.json and a matching .xproj file. This project.json is the source of truth for a project's dependencies and configuration options. Solution need to contain solution folders that match the physical folder (src, test, tools, etc.). Assembly naming pattern The general naming pattern is Docfx.<area>.<subarea>. Unit tests We use xUnit.net for all unit testing. Coding Standards Please refer to C# Coding standards for detailed guideline for C# coding standards. TODO Template Coding standards TODO Template Preprocess JS Coding standards"
  },
  "articles/markdown.html": {
    "href": "articles/markdown.html",
    "title": "Markdown | Biwen.QuickApi 2.0",
    "keywords": "Markdown Markdown is a lightweight markup language with plain text formatting syntax. Docfx supports CommonMark compliant Markdown parsed through the Markdig parsing engine. Link to Math Expressions Block Quotes This is a block quote. Alerts Note Information the user should notice even if skimming. Tip Optional information to help a user be more successful. Important Essential information required for user success. Caution Negative potential consequences of an action. Warning Dangerous certain consequences of an action. MY TODO This is a TODO. Image Mermaid Diagrams Flowchart flowchart LR A[Hard] -->|Text| B(Round) B --> C{Decision} C -->|One| D[Result 1] C -->|Two| E[Result 2] Code Snippet The example highlights lines 2, line 5 to 7 and lines 9 to the end of the file. using System; using Azure; using Azure.Storage; using Azure.Storage.Blobs; class Program { static void Main(string[] args) { // Define the connection string for the storage account string connectionString = \"DefaultEndpointsProtocol=https;AccountName=<your-account-name>;AccountKey=<your-account-key>;EndpointSuffix=core.windows.net\"; // Create a new BlobServiceClient using the connection string var blobServiceClient = new BlobServiceClient(connectionString); // Create a new container var container = blobServiceClient.CreateBlobContainer(\"mycontainer\"); // Upload a file to the container using (var fileStream = File.OpenRead(\"path/to/file.txt\")) { container.UploadBlob(\"file.txt\", fileStream); } // Download the file from the container var downloadedBlob = container.GetBlobClient(\"file.txt\").Download(); using (var fileStream = File.OpenWrite(\"path/to/downloaded-file.txt\")) { downloadedBlob.Value.Content.CopyTo(fileStream); } } } Math Expressions This sentence uses $ delimiters to show math inline: \\(\\sqrt{3x-1}+(1+x)^2\\) The Cauchy-Schwarz Inequality \\(\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)\\) This expression uses \\$ to display a dollar sign: \\(\\sqrt{\\$4}\\) To split $100 in half, we calculate \\(100/2\\) Custom Syntax Highlighting resource storageAccount 'Microsoft.Storage/storageAccounts@2021-06-01' = { name: 'hello' // (...) } Tabs Linux Windows Content for Linux... Content for Windows... The above tab group was created with the following syntax: # [Linux](#tab/linux) Content for Linux... # [Windows](#tab/windows) Content for Windows... --- Tabs are indicated by using a specific link syntax within a Markdown header. The syntax can be described as follows: # [Tab Display Name](#tab/tab-id) A tab starts with a Markdown header, #, and is followed by a Markdown link [](). The text of the link will become the text of the tab header, displayed to the customer. In order for the header to be recognized as a tab, the link itself must start with #tab/ and be followed by an ID representing the content of the tab. The ID is used to sync all same-ID tabs across the page. Using the above example, when a user selects a tab with the link #tab/windows, all tabs with the link #tab/windows on the page will be selected. Dependent tabs It's possible to make the selection in one set of tabs dependent on the selection in another set of tabs. Here's an example of that in action: .NET .NET TypeScript TypeScript REST API .NET content for Linux... .NET content for Windows... TypeScript content for Linux... TypeScript content for Windows... REST API content, independent of platform... flowchart LR A[Hard] -->|Text| B(Round) B --> C{Decision} C -->|One| D[Result 1] C -->|Two| E[Result 2] Notice how changing the Linux/Windows selection above changes the content in the .NET and TypeScript tabs. This is because the tab group defines two versions for each .NET and TypeScript, where the Windows/Linux selection above determines which version is shown for .NET/TypeScript. Here's the markup that shows how this is done: # [.NET](#tab/dotnet/linux) .NET content for Linux... # [.NET](#tab/dotnet/windows) .NET content for Windows... # [TypeScript](#tab/typescript/linux) TypeScript content for Linux... # [TypeScript](#tab/typescript/windows) TypeScript content for Windows... # [REST API](#tab/rest) REST API content, independent of platform... --- Details Demo root@server# apt-get install nano"
  },
  "index.html": {
    "href": "index.html",
    "title": "Biwen.QuickApi | Biwen.QuickApi 2.0",
    "keywords": "Biwen.QuickApi 项目介绍 Biwen.QuickApi 2+,是一个微型aspnetcore开发框架,提供minimalapi的QuickApi封装,提供IQuickEndpoint书写minimalapi, 模块化支持Modular,发布订阅:IEvent,作业调度:IScheduleTask,LocalLock,OpenApi ~~ public class MyStore { public static Todo[] SampleTodos() { return [ new(1, \"Walk the dog\"), new(2, \"Do the dishes\", DateOnly.FromDateTime(DateTime.Now)), ]; } } [QuickApi(\"todos\")] //返回对象方式 public class TodoApi : BaseQuickApi<EmptyRequest,Todo[]> { public override async ValueTask<Todo[]> ExecuteAsync(EmptyRequest request) { await Task.CompletedTask; return MyStore.SampleTodos(); } } (MinimalApi as REPR) Biwen.QuickApi遵循了 REPR 设计 （Request-Endpoint-Response） 开箱即用 write less, do more ; write anywhere, do anything 欢迎小伙伴们star&issue共同学习进步 Biwen.QuickApi 开发工具 Visual Studio 2022 17.10.0 + Net 9.0.0 依赖环境&库 Microsoft.AspNetCore.App FluentValidation.AspNetCore Microsoft.AspNetCore.OpenApi 使用方式 Step0 Nuget dotnet add package Biwen.QuickApi Step1 UseBiwenQuickApis BiwenQuickApiOptions配置项: RoutePrefix:前缀,默认:api, EnableAntiForgeryTokens:是否启用防伪,默认:true, EnablePubSub:是否启用发布订阅,默认:true,#17 EnableScheduling:是否启用调度,默认:true,#18 UseQuickApiExceptionResultBuilder:是否启用QuickApi的规范化异常处理,默认:false,(true将返回详细的异常信息到前端.一般仅调试模式开启) services.AddBiwenQuickApis(Action<BiwenQuickApiOptions>? options);//add services app.UseBiwenQuickApis();//use middleware Step2 Define Request and Response 推荐Biwen.AutoClassGen(已内置)生成Partial Request & DTO对象 参考代码 public class HelloApiRequest : BaseRequest<HelloApiRequest> { [Description(\"Name Desc\")] public string? Name { get; set; } /// <summary> /// FromQuery特性绑定字段 /// </summary> [FromQuery(\"q\")] public string? Q { get; set; } public HelloApiRequest() { RuleFor(x => x.Name).NotNull().Length(5, 10); } } /// <summary> /// 上传文件FileUploadRequest /// </summary> public class FileUploadRequest : BaseRequest<FileUploadRequest> { public IFormFile? File { get; set; } public FileUploadRequest() { RuleFor(x => x.File).NotNull(); } } /// <summary> /// 模拟自定义绑定的Request /// </summary> public class CustomApiRequest : BaseRequest<CustomApiRequest> { public string? Name { get; set; } public CustomApiRequest() { RuleFor(x => x.Name).NotNull().Length(5, 10); } } /// <summary> /// 标记FromBody,表示这个请求对象是FromBody的 /// </summary> [FromBody] public class FromBodyRequest : BaseRequest<FromBodyRequest> { public int Id { get; set; } public string? Name { get; set; } public FromBodyRequest() { RuleFor(x => x.Id).InclusiveBetween(1, 100);//必须1~100 } } /// <summary> /// 自定义的绑定器 /// </summary> public class CustomApiRequestBinder : IReqBinder<CustomApiRequest> { public static async ValueTask<CustomApiRequest> BindAsync(HttpContext context,ParameterInfo parameter = null) { var request = new CustomApiRequest { Name = context.Request.Query[\"c\"] }; await Task.CompletedTask; return request; } } public class HelloApiResponse { public string? Message { get; set; } } Step3 Define QuickApi /// <summary> /// get ~/admin/index /// </summary> [QuickApi(\"index\", Group = \"admin\", Verbs = Verb.GET | Verb.POST, Policy = \"admin\")] [QuickApiSummary(\"this is summary\",\"this is description\")] public class NeedAuthApi : BaseQuickApi { public override IResult Execute(EmptyRequest request) { return Results.Ok(); } } /// <summary> /// get ~/hello/world/{name} /// </summary> [QuickApi(\"world/{name}\", Group = \"hello\", Verbs = Verb.GET | Verb.POST)] public class HelloApi : BaseQuickApi<HelloApiRequest, HelloApiResponse> { private readonly HelloService _service; private readonly IHttpContextAccessor _httpContextAccessor; public HelloApi(HelloService service,IHttpContextAccessor httpContextAccessor) { _service = service; _httpContextAccessor = httpContextAccessor; } public override HelloApiResponse Execute(HelloApiRequest request) { var hello = _service.Hello($\"hello world {_httpContextAccessor.HttpContext!.Request.Path} !\"); return new HelloApiResponse{ Message = hello }; } } /// <summary> /// get ~/custom?c=11112222 /// </summary> [QuickApi(\"custom\", Verbs = Verb.GET)] public class CustomApi : BaseQuickApi<CustomApiRequest> { public CustomApi() { //自定义绑定器 UseReqBinder<CustomApiRequestBinder>(); } public override async ValueTask<IResult> ExecuteAsync(CustomApiRequest request) { await Task.CompletedTask; Console.WriteLine($\"获取自定义的 CustomApi:,从querystring:c绑定,{request.Name}\"); return Results.Ok(); } /// <summary> /// 提供minimal扩展 /// </summary> /// <param name=\"builder\"></param> /// <returns></returns> public override RouteHandlerBuilder HandlerBuilder(RouteHandlerBuilder builder) { //自定义描述 builder.WithOpenApi(operation => new(operation) { Summary = \"This is a summary\", Description = \"This is a description\" }); //自定义标签 builder.WithTags(\"custom\"); //自定义过滤器 builder.AddEndpointFilter(async (context, next) => { Console.WriteLine(\"自定义过滤器!\"); return await next(context); }); //默认实现了Accepts和Produces return base.HandlerBuilder(builder); //如果完全自定义直接返回Builder //return builder; } } /// <summary> /// 上传文件测试 /// 请使用postman & apifox 测试 /// </summary> [QuickApi(\"fromfile\", Verbs = Verb.POST)] [QuickApiSummary(\"上传文件测试\", \"上传文件测试\")] public class FromFileApi : BaseQuickApi<FileUploadRequest, Results<Ok<string>,BadRequest<string>>> { public override async ValueTask<Results<Ok<string>,BadRequest<string>> ExecuteAsync(FileUploadRequest request) { //测试上传一个文本文件并读取内容 if (request.File != null) { using (var sr = new StreamReader(request.File.OpenReadStream())) { var content = await sr.ReadToEndAsync(); return TypedResults.Ok(content); } } return TypedResults.BadRequest(\"no file\"); } } /// <summary> /// JustAsService 只会被服务发现，不会被注册到路由表 /// </summary> [QuickApi(\"\"), JustAsService] public class JustAsService : BaseQuickApi<EmptyRequest, string> { public override async ValueTask<string> ExecuteAsync(EmptyRequest request) { return \"Hello World JustAsService!\"; } } 提供QuickApi的Group扩展支持 // 当前模拟给所有 Group为空的QuickApi加上 Tag \"Def\" public class MyGroupRouteBuilder : IQuickApiGroupRouteBuilder { // 表述Group为空的QuickApi public string Group => string.Empty; // 执行顺序 public int Order => 1; // 实现Builder方法 public RouteGroupBuilder Builder(RouteGroupBuilder routeBuilder) { // 给所有 Group为空的QuickApi加上 Tag \"Def\" routeBuilder.WithTags(\"Def\"); return routeBuilder; } } // 最后注册 builder.Services.AddBiwenQuickApiGroupRouteBuilder<MyGroupRouteBuilder>(); Step4 Enjoy //直接访问 // GET ~/hello/world/biwen // GET ~/hello/world/biwen?name=biwen // POST ~/hello/world/biwen // GET ~/custom?c=11112222 //你也可以把QuickApi当Service使用 app.MapGet(\"/fromapi\", async (Apis.Hello4Api api) => { //通过你的方式获取请求对象 var req = new EmptyRequest(); //验证请求对象 var result = req.RealValidator.Validate(req); if (!result.IsValid) { return Results.BadRequest(result.ToDictionary()); } //执行请求 var x = await api.ExecuteAsync(new EmptyRequest()); return Results.Ok(x); }); Step5 OpenApi集成 //register openapi & quickapi document builder.Services.AddOpenApi(options => { options.UseTransformer<BearerSecuritySchemeTransformer>(); options.ShouldInclude = (desc) => true; }); //more doc group... //map openapi doc & ui app.MapGroup(\"openapi\", app => { //swagger ui app.MapOpenApi(\"{documentName}.json\"); app.MapScalarUi(); }); Step6 OpenApi 以及Client代理 你可以全局配置版本号,以及自定义的OpenApi描述 你可以重写QuickApi的HandlerBuilder方法,以便于你自定义的OpenApi描述 我们强烈建议您使用Kiota,Refit生成代理代码,以便于您的客户端和服务端保持一致的接口定义 因为遵循REPR风格,所以不推荐SwaggerUI或使用SwaggerStudio生成代理代码,除非您的QuickApi定义的相当规范(如存在自定义绑定,别名绑定等)! /// <summary> /// refit client /// </summary> public interface IBusiness { [Refit.Get(\"/fromapi\")] public Task<TestRsp> TestPost(); } //Refit builder.Services.AddRefitClient<IBusiness>() .ConfigureHttpClient(c => c.BaseAddress = new Uri(\"http://localhost:5101\")); var app = builder.Build(); app.MapGet(\"/from-quickapi\", async (IBusiness bussiness) => { var resp = await bussiness.TestPost(); return Results.Content(resp.Message); }); Benchmark性能测试 BenchmarkDotNet v0.13.12, Windows 10 (10.0.19045.3570/22H2/2022Update) 11th Gen Intel Core i7-11800H 2.30GHz, 1 CPU, 16 logical and 8 physical cores .NET SDK 8.0.100 [Host] : .NET 8.0.0 (8.0.0.100), X64 RyuJIT AVX2 [AttachedDebugger] Job-WHDDIT : .NET 8.0.0 (8.0.0.100), X64 RyuJIT AVX2 Runtime=.NET 8.0 InvocationCount=2000 IterationCount=10 LaunchCount=1 WarmupCount=1 Method Mean Error StdDev Median Ratio RatioSD Gen0 Allocated Alloc Ratio WebApiCtrl 385.5 μs 357.93 μs 236.75 μs 231.0 μs 1.00 0.00 2.5000 33.5 KB 1.00 MinimalApi 221.2 μs 13.02 μs 6.81 μs 220.9 μs 0.68 0.34 2.0000 24.38 KB 0.73 QuickApi 235.9 μs 22.26 μs 11.65 μs 235.4 μs 0.72 0.34 2.0000 27.59 KB 0.82 Q&A 为什么不支持多个参数的绑定? -- 因为我认为这样的Api设计是不合理的,我们遵循REPR设计理念,如果你需要多个参数,请使用复杂化的Request对象 QuickApi中如何拿到HttpContext对象? -- 请在构造函数中注入IHttpContextAccessor获取 是否支持Minimal的中间件和拦截器? -- 支持的,本身QuickApi就是扩展了MinimalApi,底层也是Minimal的处理机制,所以请考虑全局的中间件和拦截器,以及重写QuickApi的HandlerBuilder方法 -- 如果你仅仅需要使用中间件控制QuickApi的行为可以参考下面的代码: var md = context.GetEndpoint()?.Metadata.GetMetadata<QuickApiMetadata>(); if (md == null || md.QuickApiType == null) { await _next(context); return; } //todo:"
  },
  "pdf/cover.html": {
    "href": "pdf/cover.html",
    "title": "DOCFX PDF SAMPLE | Biwen.QuickApi 2.0",
    "keywords": "@media print { @page { margin: 0 !important; } body { -webkit-print-color-adjust: exact; -moz-print-color-adjust: exact; -ms-print-color-adjust: exact; print-color-adjust: exact; } } DOCFX PDF SAMPLE"
  },
  "restapi/contacts.html": {
    "href": "restapi/contacts.html",
    "title": "Contacts | Biwen.QuickApi 2.0",
    "keywords": "Contacts | Improve this Doc View Source get contacts You can get a collection of contacts from your tenant. Required scope: Contacts.Read or Contacts.Write Request GET /contacts?api-version Parameters Name Type Default Notes *api-version 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Type Description Samples 200 OK. Indicates success. The results are returned in the response body. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/myorganization/$metadata#directoryObjects/Microsoft.DirectoryServices.Contact\", \"value\": [ { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"31944231-fd52-4a7f-b32e-7902a01fddf9\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Marcus Breyer\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Marcus\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Marcus@contoso.com\", \"mailNickname\": \"MarcusBreyer\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Marcus@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Breyer\", \"telephoneNumber\": null }, { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"35110b16-360c-4c4a-93b2-03f065fabd93\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Yossi Ran\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Yossi\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Yossi@contoso.com\", \"mailNickname\": \"YossiRan\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Yossi@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Ran\", \"telephoneNumber\": null }, { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"7163f3b8-70c9-43d2-b9e1-4467ddaf087a\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Jeremy Nelson\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Jeremy\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Jeremy@contoso.com\", \"mailNickname\": \"JeremyNelson\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Jeremy@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Nelson\", \"telephoneNumber\": null }, { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"83234b5c-3a10-4108-8f36-39b1addadfdb\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"David Strome\", \"facsimileTelephoneNumber\": null, \"givenName\": \"David\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"David@contoso.com\", \"mailNickname\": \"DavidStrome\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:David@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Strome\", \"telephoneNumber\": null }, { \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"8c1315ce-bf6f-4e26-b24f-c830606ef41c\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Holly Holt\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Holly\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Holly@contoso.com\", \"mailNickname\": \"HollyHolt\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Holly@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Holt\", \"telephoneNumber\": null } ] } | Improve this Doc View Source get contact by id Get a contact by using the object ID. Required scope: Contacts.Read or Contacts.Write Request GET /contacts/{object_id}?api-version Parameters Name Type Default Notes *object_id 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version 1.6 Specifies the version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Type Description Samples 200 OK. Indicates success. The contact is returned in the response body. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/graphdir1.onmicrosoft.com/$metadata#directoryObjects/Microsoft.DirectoryServices.Contact/@Element\", \"odata.type\": \"Microsoft.DirectoryServices.Contact\", \"objectType\": \"Contact\", \"objectId\": \"31944231-fd52-4a7f-b32e-7902a01fddf9\", \"deletionTimestamp\": null, \"city\": null, \"companyName\": null, \"country\": null, \"department\": null, \"dirSyncEnabled\": null, \"displayName\": \"Marcus Breyer\", \"facsimileTelephoneNumber\": null, \"givenName\": \"Marcus\", \"jobTitle\": null, \"lastDirSyncTime\": null, \"mail\": \"Marcus@contoso.com\", \"mailNickname\": \"MarcusBreyer\", \"mobile\": null, \"physicalDeliveryOfficeName\": null, \"postalCode\": null, \"provisioningErrors\": [], \"proxyAddresses\": [ \"SMTP:Marcus@contoso.com\" ], \"sipProxyAddress\": null, \"state\": null, \"streetAddress\": null, \"surname\": \"Breyer\", \"telephoneNumber\": null } | Improve this Doc View Source update contact Change a contact's properties. Required scope: Contacts.Write Request PATCH /contacts/{object_id}?api-version Parameters Name Type Default Notes *object_id 7163f3b8-70c9-43d2-b9e1-4467ddaf087a The object ID (GUID) of the target contact. *api-version 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. bodyparam contact this is request body, not real parameter Responses Status Code Type Description Samples 204 No Content. Indicates success. No response body is returned. | Improve this Doc View Source delete contact Delete a contact. Required scope: Contacts.Write Request DELETE /contacts/{object_id}[?api-version] Parameters Name Type Default Notes *object_id 7163f3b8-70c9-43d2-b9e1-4467ddaf087a The object ID (GUID) of the target contact. api-version 1.6 Specifies the version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Type Description Samples 204 No Content. Indicates success. | Improve this Doc View Source get contact manager link Get a link to the contact's manager. Required scope: Contacts.Read or Contacts.Write Request GET /contacts/{object_id}/$links/manager?api-version Parameters Name Type Default Notes *object_id 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Type Description Samples 200 OK. Indicates success. A link to the contact's manager is returned. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/myorganization/$metadata#directoryObjects/$links/manager\", \"url\": \"https://graph.windows.net/myorganization/directoryObjects/35110b16-360c-4c4a-93b2-03f065fabd93/Microsoft.WindowsAzure.ActiveDirectory.Contact\" } 404 Not Found. The requested resource was not found. This can occur if the manager property is not currently set for the specified contact. It can also have other causes, for example, a bad domain. A code and associated message is returned with the error. Mime type: application/json { \"odata.error\": { \"code\": \"Request_ResourceNotFound\", \"message\": { \"lang\": \"en\", \"value\": \"Resource not found for the segment 'manager'.\" } } } | Improve this Doc View Source update contact manager Update the contact's manager Required scope: Contacts.Write Request PUT /contacts/{object_id}/$links/manager?api-version Parameters Name Type Default Notes *object_id 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. *bodyparam The request body contains a single property that specifies the URL of the user or contact to add as manager. Responses Status Code Type Description Samples 204 No Content. Indicates success. No response body is returned. | Improve this Doc View Source delete contact manager by id Delete the contact's manager. Required scope: Contacts.Write Request DELETE /contacts/{object_id}/$links/manager?api-version Parameters Name Type Default Notes *object_id 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Type Description Samples 204 No Content. Indicates success. N response body is returned. | Improve this Doc View Source get contact direct reports links Get a links to the contact's direct reports. Required scope: Contacts.Read or Contacts.Write Request GET /contacts/{object_id}/$links/directReports?api-version Parameters Name Type Default Notes *object_id 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Type Description Samples 200 OK. Indicates success. One or more direct reports are returned. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/myorganization/$metadata#directoryObjects/$links/directReports\", \"value\": [ { \"url\": \"https://graph.windows.net/myorganization/directoryObjects/8c1315ce-bf6f-4e26-b24f-c830606ef41c/Microsoft.DirectoryServices.Contact\" } ] } | Improve this Doc View Source get contact memberOf links Get a links to the contact's direct group and directory role memberships. Required scope: Contacts.Read or Contacts.Write Request GET /contacts/{object_id}/$links/memberOf?api-version Parameters Name Type Default Notes *object_id 31944231-fd52-4a7f-b32e-7902a01fddf9 The object ID (GUID) of the target contact. *api-version 1.6 The version of the Graph API to target. Beginning with version 1.5, the api-version string is represented in major.minor format. Prior releases were represented as date strings: '2013-11-08' and '2013-04-05'. Required. Responses Status Code Type Description Samples 200 OK. Indicates success. One or more groups and/or directory roles are returned. Mime type: application/json { \"odata.metadata\": \"https://graph.windows.net/myorganization/$metadata#directoryObjects/$links/memberOf\", \"value\": [ { \"url\": \"https://graph.windows.net/myorganization/directoryObjects/12345678-b942-47c9-a10e-a4bee353ce60/Microsoft.DirectoryServices.Group\" } ] } Definitions contact Name Type Notes objectType string objectId string deletionTimestamp string (date-time) city string country string department string dirSyncEnabled boolean displayName string facsimileTelephoneNumber string givenName string jobTitle string lastDirSyncTime string (date-time) mail string mailNickname string mobile string physicalDeliveryOfficeName string postalCode string provisioningErrors ProvisioningError[] proxyAddresses array sipProxyAddress string state string streetAddress string surname string telephoneNumber string thumbnailPhoto string ProvisioningError Name Type Notes errorDetail string resolved boolean serviceInstance string timestamp string (date-time)"
  },
  "restapi/petstore.html": {
    "href": "restapi/petstore.html",
    "title": "Pet Store APIs | Biwen.QuickApi 2.0",
    "keywords": "Swagger Petstore Describe APIs in Pet Store pet Description for pet tag | Improve this Doc View Source addPet Add a new pet to the store Request POST /pet Parameters Name Type Default Notes *body Pet Pet object that needs to be added to the store Responses Status Code Type Description Samples 405 Invalid input NOTE: Add pet only when you needs. | Improve this Doc View Source updatePet Update an existing pet Request PUT /pet Parameters Name Type Default Notes *body Pet Pet object that needs to be added to the store Responses Status Code Type Description Samples 400 Invalid ID supplied 404 Pet not found 405 Validation exception | Improve this Doc View Source findPetsByStatus Finds Pets by status Multiple status values can be provided with comma separated strings Request GET /pet/findByStatus?status Parameters Name Type Default Notes *status Status values that need to be considered for filter Responses Status Code Type Description Samples 200 Pet[] successful operation 400 Invalid status value | Improve this Doc View Source findPetsByTags Finds Pets by tags Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing. Request GET /pet/findByTags?tags Parameters Name Type Default Notes *tags Tags to filter by Responses Status Code Type Description Samples 200 Pet[] successful operation 400 Invalid tag value | Improve this Doc View Source deletePet Deletes a pet Request DELETE /pet/{petId} Parameters Name Type Default Notes api_key *petId Pet id to delete Responses Status Code Type Description Samples 400 Invalid ID supplied 404 Pet not found | Improve this Doc View Source getPetById Find pet by ID Returns a single pet Request GET /pet/{petId} Parameters Name Type Default Notes *petId ID of pet to return Responses Status Code Type Description Samples 200 Pet successful operation 400 Invalid ID supplied 404 Pet not found | Improve this Doc View Source updatePetWithForm Updates a pet in the store with form data Request POST /pet/{petId} Parameters Name Type Default Notes *petId ID of pet that needs to be updated name Updated name of the pet status Updated status of the pet Responses Status Code Type Description Samples 405 Invalid input | Improve this Doc View Source uploadFile uploads an image Request POST /pet/{petId}/uploadImage Parameters Name Type Default Notes *petId ID of pet to update additionalMetadata Additional data to pass to server file file to upload Responses Status Code Type Description Samples 200 ApiResponse successful operation store Access to Petstore orders Additional description for store tag | Improve this Doc View Source addPet Add a new pet to the store Request POST /pet Parameters Name Type Default Notes *body Pet Pet object that needs to be added to the store Responses Status Code Type Description Samples 405 Invalid input NOTE: Add pet only when you needs. | Improve this Doc View Source getInventory Returns pet inventories by status Returns a map of status codes to quantities Request GET /store/inventory Responses Status Code Type Description Samples 200 object successful operation | Improve this Doc View Source placeOrder Place an order for a pet Request POST /store/order Parameters Name Type Default Notes *body Order order placed for purchasing the pet Responses Status Code Type Description Samples 200 Order successful operation 400 Invalid Order | Improve this Doc View Source deleteOrder Delete purchase order by ID For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors Request DELETE /store/order/{orderId} Parameters Name Type Default Notes *orderId ID of the order that needs to be deleted Responses Status Code Type Description Samples 400 Invalid ID supplied 404 Order not found | Improve this Doc View Source getOrderById Find purchase order by ID For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions Request GET /store/order/{orderId} Parameters Name Type Default Notes *orderId ID of pet that needs to be fetched Responses Status Code Type Description Samples 200 Order successful operation 400 Invalid ID supplied 404 Order not found user Operations about user | Improve this Doc View Source createUser Create user This can only be done by the logged in user. Request POST /user Parameters Name Type Default Notes *body User Created user object Responses Status Code Type Description Samples default successful operation | Improve this Doc View Source createUsersWithArrayInput Creates list of users with given input array Request POST /user/createWithArray Parameters Name Type Default Notes *body User[] List of user object Responses Status Code Type Description Samples default successful operation | Improve this Doc View Source createUsersWithListInput Creates list of users with given input array Request POST /user/createWithList Parameters Name Type Default Notes *body User[] List of user object Responses Status Code Type Description Samples default successful operation | Improve this Doc View Source loginUser Logs user into the system Request GET /user/login?username&password Parameters Name Type Default Notes *username The user name for login *password The password for login in clear text Responses Status Code Type Description Samples 200 string successful operation 400 Invalid username/password supplied | Improve this Doc View Source logoutUser Logs out current logged in user session Request GET /user/logout Responses Status Code Type Description Samples default successful operation | Improve this Doc View Source deleteUser Delete user This can only be done by the logged in user. Request DELETE /user/{username} Parameters Name Type Default Notes *username The name that needs to be deleted Responses Status Code Type Description Samples 400 Invalid username supplied 404 User not found | Improve this Doc View Source getUserByName Get user by user name Request GET /user/{username} Parameters Name Type Default Notes *username The name that needs to be fetched. Use user1 for testing. Responses Status Code Type Description Samples 200 User successful operation 400 Invalid username supplied 404 User not found Other APIs | Improve this Doc View Source updateUser Updated user This can only be done by the logged in user. Request PUT /user/{username} Parameters Name Type Default Notes *username name that need to be updated *body User Updated user object Responses Status Code Type Description Samples 400 Invalid user supplied 404 User not found Definitions Pet Name Type Notes category Category[] id integer (int64) name string photoUrls array status string pet status in the store tags Tag[] Category Name Type Notes id integer (int64) name string Tag Name Type Notes id integer (int64) name string ApiResponse Name Type Notes code integer (int32) message string type string Order Name Type Notes complete boolean id integer (int64) petId integer (int64) quantity integer (int32) shipDate string (date-time) status string Order Status User Name Type Notes email string firstName string id integer (int64) lastName string password string phone string userStatus integer (int32) User Status username string See Alsos See other REST APIs: Contacts API"
  }
}