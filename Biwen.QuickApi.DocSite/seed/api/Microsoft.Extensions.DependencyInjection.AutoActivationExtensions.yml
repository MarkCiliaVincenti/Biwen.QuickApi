### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  commentId: T:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  id: AutoActivationExtensions
  parent: Microsoft.Extensions.DependencyInjection
  children:
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Func{System.IServiceProvider,System.Object,System.Object})
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Type)
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``0})
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``1})
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``1})
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Func{System.IServiceProvider,System.Object,System.Object})
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Type)
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``0})
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})
  - Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  langs:
  - csharp
  - vb
  name: AutoActivationExtensions
  nameWithType: AutoActivationExtensions
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  type: Class
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static class AutoActivationExtensions
    content.vb: Public Module AutoActivationExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: ActivateSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: ActivateSingleton<TService>(IServiceCollection)
  nameWithType: AutoActivationExtensions.ActivateSingleton<TService>(IServiceCollection)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateSingleton<TService>(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: 'public static IServiceCollection ActivateSingleton<TService>(this IServiceCollection services) where TService : class'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    typeParameters:
    - id: TService
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function ActivateSingleton(Of TService As Class)(services As IServiceCollection) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateSingleton*
  nameWithType.vb: AutoActivationExtensions.ActivateSingleton(Of TService)(IServiceCollection)
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateSingleton(Of TService)(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name.vb: ActivateSingleton(Of TService)(IServiceCollection)
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)
  id: ActivateSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: ActivateSingleton(IServiceCollection, Type)
  nameWithType: AutoActivationExtensions.ActivateSingleton(IServiceCollection, Type)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static IServiceCollection ActivateSingleton(this IServiceCollection services, Type serviceType)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceType
      type: System.Type
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function ActivateSingleton(services As IServiceCollection, serviceType As Type) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateSingleton*
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``1})
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``1})
  id: AddActivatedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``1})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: AddActivatedSingleton<TService, TImplementation>(IServiceCollection, Func<IServiceProvider, TImplementation>)
  nameWithType: AutoActivationExtensions.AddActivatedSingleton<TService, TImplementation>(IServiceCollection, Func<IServiceProvider, TImplementation>)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton<TService, TImplementation>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Func<System.IServiceProvider, TImplementation>)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: 'public static IServiceCollection AddActivatedSingleton<TService, TImplementation>(this IServiceCollection services, Func<IServiceProvider, TImplementation> implementationFactory) where TService : class where TImplementation : class, TService'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: implementationFactory
      type: System.Func{System.IServiceProvider,{TImplementation}}
    typeParameters:
    - id: TService
    - id: TImplementation
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddActivatedSingleton(Of TService As Class, TImplementation As {Class, TService})(services As IServiceCollection, implementationFactory As Func(Of IServiceProvider, TImplementation)) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton*
  nameWithType.vb: AutoActivationExtensions.AddActivatedSingleton(Of TService, TImplementation)(IServiceCollection, Func(Of IServiceProvider, TImplementation))
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton(Of TService, TImplementation)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Func(Of System.IServiceProvider, TImplementation))
  name.vb: AddActivatedSingleton(Of TService, TImplementation)(IServiceCollection, Func(Of IServiceProvider, TImplementation))
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddActivatedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: AddActivatedSingleton<TService, TImplementation>(IServiceCollection)
  nameWithType: AutoActivationExtensions.AddActivatedSingleton<TService, TImplementation>(IServiceCollection)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton<TService, TImplementation>(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: 'public static IServiceCollection AddActivatedSingleton<TService, TImplementation>(this IServiceCollection services) where TService : class where TImplementation : class, TService'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    typeParameters:
    - id: TService
    - id: TImplementation
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddActivatedSingleton(Of TService As Class, TImplementation As {Class, TService})(services As IServiceCollection) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton*
  nameWithType.vb: AutoActivationExtensions.AddActivatedSingleton(Of TService, TImplementation)(IServiceCollection)
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton(Of TService, TImplementation)(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name.vb: AddActivatedSingleton(Of TService, TImplementation)(IServiceCollection)
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})
  id: AddActivatedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: AddActivatedSingleton<TService>(IServiceCollection, Func<IServiceProvider, TService>)
  nameWithType: AutoActivationExtensions.AddActivatedSingleton<TService>(IServiceCollection, Func<IServiceProvider, TService>)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton<TService>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Func<System.IServiceProvider, TService>)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: 'public static IServiceCollection AddActivatedSingleton<TService>(this IServiceCollection services, Func<IServiceProvider, TService> implementationFactory) where TService : class'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: implementationFactory
      type: System.Func{System.IServiceProvider,{TService}}
    typeParameters:
    - id: TService
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddActivatedSingleton(Of TService As Class)(services As IServiceCollection, implementationFactory As Func(Of IServiceProvider, TService)) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton*
  nameWithType.vb: AutoActivationExtensions.AddActivatedSingleton(Of TService)(IServiceCollection, Func(Of IServiceProvider, TService))
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton(Of TService)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Func(Of System.IServiceProvider, TService))
  name.vb: AddActivatedSingleton(Of TService)(IServiceCollection, Func(Of IServiceProvider, TService))
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddActivatedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: AddActivatedSingleton<TService>(IServiceCollection)
  nameWithType: AutoActivationExtensions.AddActivatedSingleton<TService>(IServiceCollection)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton<TService>(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: 'public static IServiceCollection AddActivatedSingleton<TService>(this IServiceCollection services) where TService : class'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    typeParameters:
    - id: TService
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddActivatedSingleton(Of TService As Class)(services As IServiceCollection) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton*
  nameWithType.vb: AutoActivationExtensions.AddActivatedSingleton(Of TService)(IServiceCollection)
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton(Of TService)(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name.vb: AddActivatedSingleton(Of TService)(IServiceCollection)
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)
  id: AddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: AddActivatedSingleton(IServiceCollection, Type)
  nameWithType: AutoActivationExtensions.AddActivatedSingleton(IServiceCollection, Type)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static IServiceCollection AddActivatedSingleton(this IServiceCollection services, Type serviceType)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceType
      type: System.Type
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddActivatedSingleton(services As IServiceCollection, serviceType As Type) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton*
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})
  id: AddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: AddActivatedSingleton(IServiceCollection, Type, Func<IServiceProvider, object>)
  nameWithType: AutoActivationExtensions.AddActivatedSingleton(IServiceCollection, Type, Func<IServiceProvider, object>)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, System.Func<System.IServiceProvider, object>)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static IServiceCollection AddActivatedSingleton(this IServiceCollection services, Type serviceType, Func<IServiceProvider, object> implementationFactory)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceType
      type: System.Type
    - id: implementationFactory
      type: System.Func{System.IServiceProvider,System.Object}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddActivatedSingleton(services As IServiceCollection, serviceType As Type, implementationFactory As Func(Of IServiceProvider, Object)) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton*
  nameWithType.vb: AutoActivationExtensions.AddActivatedSingleton(IServiceCollection, Type, Func(Of IServiceProvider, Object))
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, System.Func(Of System.IServiceProvider, Object))
  name.vb: AddActivatedSingleton(IServiceCollection, Type, Func(Of IServiceProvider, Object))
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)
  id: AddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: AddActivatedSingleton(IServiceCollection, Type, Type)
  nameWithType: AutoActivationExtensions.AddActivatedSingleton(IServiceCollection, Type, Type)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, System.Type)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static IServiceCollection AddActivatedSingleton(this IServiceCollection services, Type serviceType, Type implementationType)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceType
      type: System.Type
    - id: implementationType
      type: System.Type
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddActivatedSingleton(services As IServiceCollection, serviceType As Type, implementationType As Type) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton*
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)
  id: TryAddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: TryAddActivatedSingleton(IServiceCollection, Type)
  nameWithType: AutoActivationExtensions.TryAddActivatedSingleton(IServiceCollection, Type)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static void TryAddActivatedSingleton(this IServiceCollection services, Type serviceType)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceType
      type: System.Type
    content.vb: Public Shared Sub TryAddActivatedSingleton(services As IServiceCollection, serviceType As Type)
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton*
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)
  id: TryAddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: TryAddActivatedSingleton(IServiceCollection, Type, Type)
  nameWithType: AutoActivationExtensions.TryAddActivatedSingleton(IServiceCollection, Type, Type)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, System.Type)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static void TryAddActivatedSingleton(this IServiceCollection services, Type serviceType, Type implementationType)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceType
      type: System.Type
    - id: implementationType
      type: System.Type
    content.vb: Public Shared Sub TryAddActivatedSingleton(services As IServiceCollection, serviceType As Type, implementationType As Type)
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton*
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})
  id: TryAddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: TryAddActivatedSingleton(IServiceCollection, Type, Func<IServiceProvider, object>)
  nameWithType: AutoActivationExtensions.TryAddActivatedSingleton(IServiceCollection, Type, Func<IServiceProvider, object>)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, System.Func<System.IServiceProvider, object>)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static void TryAddActivatedSingleton(this IServiceCollection services, Type serviceType, Func<IServiceProvider, object> implementationFactory)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceType
      type: System.Type
    - id: implementationFactory
      type: System.Func{System.IServiceProvider,System.Object}
    content.vb: Public Shared Sub TryAddActivatedSingleton(services As IServiceCollection, serviceType As Type, implementationFactory As Func(Of IServiceProvider, Object))
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton*
  nameWithType.vb: AutoActivationExtensions.TryAddActivatedSingleton(IServiceCollection, Type, Func(Of IServiceProvider, Object))
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, System.Func(Of System.IServiceProvider, Object))
  name.vb: TryAddActivatedSingleton(IServiceCollection, Type, Func(Of IServiceProvider, Object))
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: TryAddActivatedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: TryAddActivatedSingleton<TService>(IServiceCollection)
  nameWithType: AutoActivationExtensions.TryAddActivatedSingleton<TService>(IServiceCollection)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton<TService>(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: 'public static void TryAddActivatedSingleton<TService>(this IServiceCollection services) where TService : class'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    typeParameters:
    - id: TService
    content.vb: Public Shared Sub TryAddActivatedSingleton(Of TService As Class)(services As IServiceCollection)
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton*
  nameWithType.vb: AutoActivationExtensions.TryAddActivatedSingleton(Of TService)(IServiceCollection)
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton(Of TService)(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name.vb: TryAddActivatedSingleton(Of TService)(IServiceCollection)
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: TryAddActivatedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: TryAddActivatedSingleton<TService, TImplementation>(IServiceCollection)
  nameWithType: AutoActivationExtensions.TryAddActivatedSingleton<TService, TImplementation>(IServiceCollection)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton<TService, TImplementation>(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: 'public static void TryAddActivatedSingleton<TService, TImplementation>(this IServiceCollection services) where TService : class where TImplementation : class, TService'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    typeParameters:
    - id: TService
    - id: TImplementation
    content.vb: Public Shared Sub TryAddActivatedSingleton(Of TService As Class, TImplementation As {Class, TService})(services As IServiceCollection)
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton*
  nameWithType.vb: AutoActivationExtensions.TryAddActivatedSingleton(Of TService, TImplementation)(IServiceCollection)
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton(Of TService, TImplementation)(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name.vb: TryAddActivatedSingleton(Of TService, TImplementation)(IServiceCollection)
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})
  id: TryAddActivatedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: TryAddActivatedSingleton<TService>(IServiceCollection, Func<IServiceProvider, TService>)
  nameWithType: AutoActivationExtensions.TryAddActivatedSingleton<TService>(IServiceCollection, Func<IServiceProvider, TService>)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton<TService>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Func<System.IServiceProvider, TService>)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: 'public static void TryAddActivatedSingleton<TService>(this IServiceCollection services, Func<IServiceProvider, TService> implementationFactory) where TService : class'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: implementationFactory
      type: System.Func{System.IServiceProvider,{TService}}
    typeParameters:
    - id: TService
    content.vb: Public Shared Sub TryAddActivatedSingleton(Of TService As Class)(services As IServiceCollection, implementationFactory As Func(Of IServiceProvider, TService))
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton*
  nameWithType.vb: AutoActivationExtensions.TryAddActivatedSingleton(Of TService)(IServiceCollection, Func(Of IServiceProvider, TService))
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton(Of TService)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Func(Of System.IServiceProvider, TService))
  name.vb: TryAddActivatedSingleton(Of TService)(IServiceCollection, Func(Of IServiceProvider, TService))
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  id: ActivateKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: ActivateKeyedSingleton<TService>(IServiceCollection, object?)
  nameWithType: AutoActivationExtensions.ActivateKeyedSingleton<TService>(IServiceCollection, object?)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateKeyedSingleton<TService>(Microsoft.Extensions.DependencyInjection.IServiceCollection, object?)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: 'public static IServiceCollection ActivateKeyedSingleton<TService>(this IServiceCollection services, object? serviceKey) where TService : class'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceKey
      type: System.Object
    typeParameters:
    - id: TService
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function ActivateKeyedSingleton(Of TService As Class)(services As IServiceCollection, serviceKey As Object) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateKeyedSingleton*
  nameWithType.vb: AutoActivationExtensions.ActivateKeyedSingleton(Of TService)(IServiceCollection, Object)
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateKeyedSingleton(Of TService)(Microsoft.Extensions.DependencyInjection.IServiceCollection, Object)
  name.vb: ActivateKeyedSingleton(Of TService)(IServiceCollection, Object)
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)
  id: ActivateKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: ActivateKeyedSingleton(IServiceCollection, Type, object?)
  nameWithType: AutoActivationExtensions.ActivateKeyedSingleton(IServiceCollection, Type, object?)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, object?)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static IServiceCollection ActivateKeyedSingleton(this IServiceCollection services, Type serviceType, object? serviceKey)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceType
      type: System.Type
    - id: serviceKey
      type: System.Object
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function ActivateKeyedSingleton(services As IServiceCollection, serviceType As Type, serviceKey As Object) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateKeyedSingleton*
  nameWithType.vb: AutoActivationExtensions.ActivateKeyedSingleton(IServiceCollection, Type, Object)
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, Object)
  name.vb: ActivateKeyedSingleton(IServiceCollection, Type, Object)
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``1})
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``1})
  id: AddActivatedKeyedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``1})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: AddActivatedKeyedSingleton<TService, TImplementation>(IServiceCollection, object?, Func<IServiceProvider, object?, TImplementation>)
  nameWithType: AutoActivationExtensions.AddActivatedKeyedSingleton<TService, TImplementation>(IServiceCollection, object?, Func<IServiceProvider, object?, TImplementation>)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton<TService, TImplementation>(Microsoft.Extensions.DependencyInjection.IServiceCollection, object?, System.Func<System.IServiceProvider, object?, TImplementation>)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: 'public static IServiceCollection AddActivatedKeyedSingleton<TService, TImplementation>(this IServiceCollection services, object? serviceKey, Func<IServiceProvider, object?, TImplementation> implementationFactory) where TService : class where TImplementation : class, TService'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceKey
      type: System.Object
    - id: implementationFactory
      type: System.Func{System.IServiceProvider,System.Object,{TImplementation}}
    typeParameters:
    - id: TService
    - id: TImplementation
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddActivatedKeyedSingleton(Of TService As Class, TImplementation As {Class, TService})(services As IServiceCollection, serviceKey As Object, implementationFactory As Func(Of IServiceProvider, Object, TImplementation)) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton*
  nameWithType.vb: AutoActivationExtensions.AddActivatedKeyedSingleton(Of TService, TImplementation)(IServiceCollection, Object, Func(Of IServiceProvider, Object, TImplementation))
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton(Of TService, TImplementation)(Microsoft.Extensions.DependencyInjection.IServiceCollection, Object, System.Func(Of System.IServiceProvider, Object, TImplementation))
  name.vb: AddActivatedKeyedSingleton(Of TService, TImplementation)(IServiceCollection, Object, Func(Of IServiceProvider, Object, TImplementation))
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  id: AddActivatedKeyedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: AddActivatedKeyedSingleton<TService, TImplementation>(IServiceCollection, object?)
  nameWithType: AutoActivationExtensions.AddActivatedKeyedSingleton<TService, TImplementation>(IServiceCollection, object?)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton<TService, TImplementation>(Microsoft.Extensions.DependencyInjection.IServiceCollection, object?)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: 'public static IServiceCollection AddActivatedKeyedSingleton<TService, TImplementation>(this IServiceCollection services, object? serviceKey) where TService : class where TImplementation : class, TService'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceKey
      type: System.Object
    typeParameters:
    - id: TService
    - id: TImplementation
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddActivatedKeyedSingleton(Of TService As Class, TImplementation As {Class, TService})(services As IServiceCollection, serviceKey As Object) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton*
  nameWithType.vb: AutoActivationExtensions.AddActivatedKeyedSingleton(Of TService, TImplementation)(IServiceCollection, Object)
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton(Of TService, TImplementation)(Microsoft.Extensions.DependencyInjection.IServiceCollection, Object)
  name.vb: AddActivatedKeyedSingleton(Of TService, TImplementation)(IServiceCollection, Object)
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``0})
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``0})
  id: AddActivatedKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``0})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: AddActivatedKeyedSingleton<TService>(IServiceCollection, object?, Func<IServiceProvider, object?, TService>)
  nameWithType: AutoActivationExtensions.AddActivatedKeyedSingleton<TService>(IServiceCollection, object?, Func<IServiceProvider, object?, TService>)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton<TService>(Microsoft.Extensions.DependencyInjection.IServiceCollection, object?, System.Func<System.IServiceProvider, object?, TService>)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: 'public static IServiceCollection AddActivatedKeyedSingleton<TService>(this IServiceCollection services, object? serviceKey, Func<IServiceProvider, object?, TService> implementationFactory) where TService : class'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceKey
      type: System.Object
    - id: implementationFactory
      type: System.Func{System.IServiceProvider,System.Object,{TService}}
    typeParameters:
    - id: TService
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddActivatedKeyedSingleton(Of TService As Class)(services As IServiceCollection, serviceKey As Object, implementationFactory As Func(Of IServiceProvider, Object, TService)) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton*
  nameWithType.vb: AutoActivationExtensions.AddActivatedKeyedSingleton(Of TService)(IServiceCollection, Object, Func(Of IServiceProvider, Object, TService))
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton(Of TService)(Microsoft.Extensions.DependencyInjection.IServiceCollection, Object, System.Func(Of System.IServiceProvider, Object, TService))
  name.vb: AddActivatedKeyedSingleton(Of TService)(IServiceCollection, Object, Func(Of IServiceProvider, Object, TService))
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  id: AddActivatedKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: AddActivatedKeyedSingleton<TService>(IServiceCollection, object?)
  nameWithType: AutoActivationExtensions.AddActivatedKeyedSingleton<TService>(IServiceCollection, object?)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton<TService>(Microsoft.Extensions.DependencyInjection.IServiceCollection, object?)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: 'public static IServiceCollection AddActivatedKeyedSingleton<TService>(this IServiceCollection services, object? serviceKey) where TService : class'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceKey
      type: System.Object
    typeParameters:
    - id: TService
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddActivatedKeyedSingleton(Of TService As Class)(services As IServiceCollection, serviceKey As Object) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton*
  nameWithType.vb: AutoActivationExtensions.AddActivatedKeyedSingleton(Of TService)(IServiceCollection, Object)
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton(Of TService)(Microsoft.Extensions.DependencyInjection.IServiceCollection, Object)
  name.vb: AddActivatedKeyedSingleton(Of TService)(IServiceCollection, Object)
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)
  id: AddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: AddActivatedKeyedSingleton(IServiceCollection, Type, object?)
  nameWithType: AutoActivationExtensions.AddActivatedKeyedSingleton(IServiceCollection, Type, object?)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, object?)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static IServiceCollection AddActivatedKeyedSingleton(this IServiceCollection services, Type serviceType, object? serviceKey)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceType
      type: System.Type
    - id: serviceKey
      type: System.Object
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddActivatedKeyedSingleton(services As IServiceCollection, serviceType As Type, serviceKey As Object) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton*
  nameWithType.vb: AutoActivationExtensions.AddActivatedKeyedSingleton(IServiceCollection, Type, Object)
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, Object)
  name.vb: AddActivatedKeyedSingleton(IServiceCollection, Type, Object)
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Func{System.IServiceProvider,System.Object,System.Object})
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Func{System.IServiceProvider,System.Object,System.Object})
  id: AddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Func{System.IServiceProvider,System.Object,System.Object})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: AddActivatedKeyedSingleton(IServiceCollection, Type, object?, Func<IServiceProvider, object?, object>)
  nameWithType: AutoActivationExtensions.AddActivatedKeyedSingleton(IServiceCollection, Type, object?, Func<IServiceProvider, object?, object>)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, object?, System.Func<System.IServiceProvider, object?, object>)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static IServiceCollection AddActivatedKeyedSingleton(this IServiceCollection services, Type serviceType, object? serviceKey, Func<IServiceProvider, object?, object> implementationFactory)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceType
      type: System.Type
    - id: serviceKey
      type: System.Object
    - id: implementationFactory
      type: System.Func{System.IServiceProvider,System.Object,System.Object}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddActivatedKeyedSingleton(services As IServiceCollection, serviceType As Type, serviceKey As Object, implementationFactory As Func(Of IServiceProvider, Object, Object)) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton*
  nameWithType.vb: AutoActivationExtensions.AddActivatedKeyedSingleton(IServiceCollection, Type, Object, Func(Of IServiceProvider, Object, Object))
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, Object, System.Func(Of System.IServiceProvider, Object, Object))
  name.vb: AddActivatedKeyedSingleton(IServiceCollection, Type, Object, Func(Of IServiceProvider, Object, Object))
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Type)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Type)
  id: AddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Type)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: AddActivatedKeyedSingleton(IServiceCollection, Type, object?, Type)
  nameWithType: AutoActivationExtensions.AddActivatedKeyedSingleton(IServiceCollection, Type, object?, Type)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, object?, System.Type)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static IServiceCollection AddActivatedKeyedSingleton(this IServiceCollection services, Type serviceType, object? serviceKey, Type implementationType)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceType
      type: System.Type
    - id: serviceKey
      type: System.Object
    - id: implementationType
      type: System.Type
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Shared Function AddActivatedKeyedSingleton(services As IServiceCollection, serviceType As Type, serviceKey As Object, implementationType As Type) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton*
  nameWithType.vb: AutoActivationExtensions.AddActivatedKeyedSingleton(IServiceCollection, Type, Object, Type)
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, Object, System.Type)
  name.vb: AddActivatedKeyedSingleton(IServiceCollection, Type, Object, Type)
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)
  id: TryAddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: TryAddActivatedKeyedSingleton(IServiceCollection, Type, object?)
  nameWithType: AutoActivationExtensions.TryAddActivatedKeyedSingleton(IServiceCollection, Type, object?)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, object?)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static void TryAddActivatedKeyedSingleton(this IServiceCollection services, Type serviceType, object? serviceKey)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceType
      type: System.Type
    - id: serviceKey
      type: System.Object
    content.vb: Public Shared Sub TryAddActivatedKeyedSingleton(services As IServiceCollection, serviceType As Type, serviceKey As Object)
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton*
  nameWithType.vb: AutoActivationExtensions.TryAddActivatedKeyedSingleton(IServiceCollection, Type, Object)
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, Object)
  name.vb: TryAddActivatedKeyedSingleton(IServiceCollection, Type, Object)
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Type)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Type)
  id: TryAddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Type)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: TryAddActivatedKeyedSingleton(IServiceCollection, Type, object?, Type)
  nameWithType: AutoActivationExtensions.TryAddActivatedKeyedSingleton(IServiceCollection, Type, object?, Type)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, object?, System.Type)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static void TryAddActivatedKeyedSingleton(this IServiceCollection services, Type serviceType, object? serviceKey, Type implementationType)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceType
      type: System.Type
    - id: serviceKey
      type: System.Object
    - id: implementationType
      type: System.Type
    content.vb: Public Shared Sub TryAddActivatedKeyedSingleton(services As IServiceCollection, serviceType As Type, serviceKey As Object, implementationType As Type)
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton*
  nameWithType.vb: AutoActivationExtensions.TryAddActivatedKeyedSingleton(IServiceCollection, Type, Object, Type)
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, Object, System.Type)
  name.vb: TryAddActivatedKeyedSingleton(IServiceCollection, Type, Object, Type)
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Func{System.IServiceProvider,System.Object,System.Object})
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Func{System.IServiceProvider,System.Object,System.Object})
  id: TryAddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Object,System.Func{System.IServiceProvider,System.Object,System.Object})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: TryAddActivatedKeyedSingleton(IServiceCollection, Type, object?, Func<IServiceProvider, object?, object>)
  nameWithType: AutoActivationExtensions.TryAddActivatedKeyedSingleton(IServiceCollection, Type, object?, Func<IServiceProvider, object?, object>)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, object?, System.Func<System.IServiceProvider, object?, object>)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public static void TryAddActivatedKeyedSingleton(this IServiceCollection services, Type serviceType, object? serviceKey, Func<IServiceProvider, object?, object> implementationFactory)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceType
      type: System.Type
    - id: serviceKey
      type: System.Object
    - id: implementationFactory
      type: System.Func{System.IServiceProvider,System.Object,System.Object}
    content.vb: Public Shared Sub TryAddActivatedKeyedSingleton(services As IServiceCollection, serviceType As Type, serviceKey As Object, implementationFactory As Func(Of IServiceProvider, Object, Object))
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton*
  nameWithType.vb: AutoActivationExtensions.TryAddActivatedKeyedSingleton(IServiceCollection, Type, Object, Func(Of IServiceProvider, Object, Object))
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Type, Object, System.Func(Of System.IServiceProvider, Object, Object))
  name.vb: TryAddActivatedKeyedSingleton(IServiceCollection, Type, Object, Func(Of IServiceProvider, Object, Object))
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  id: TryAddActivatedKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: TryAddActivatedKeyedSingleton<TService>(IServiceCollection, object?)
  nameWithType: AutoActivationExtensions.TryAddActivatedKeyedSingleton<TService>(IServiceCollection, object?)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton<TService>(Microsoft.Extensions.DependencyInjection.IServiceCollection, object?)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: 'public static void TryAddActivatedKeyedSingleton<TService>(this IServiceCollection services, object? serviceKey) where TService : class'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceKey
      type: System.Object
    typeParameters:
    - id: TService
    content.vb: Public Shared Sub TryAddActivatedKeyedSingleton(Of TService As Class)(services As IServiceCollection, serviceKey As Object)
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton*
  nameWithType.vb: AutoActivationExtensions.TryAddActivatedKeyedSingleton(Of TService)(IServiceCollection, Object)
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton(Of TService)(Microsoft.Extensions.DependencyInjection.IServiceCollection, Object)
  name.vb: TryAddActivatedKeyedSingleton(Of TService)(IServiceCollection, Object)
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  id: TryAddActivatedKeyedSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: TryAddActivatedKeyedSingleton<TService, TImplementation>(IServiceCollection, object?)
  nameWithType: AutoActivationExtensions.TryAddActivatedKeyedSingleton<TService, TImplementation>(IServiceCollection, object?)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton<TService, TImplementation>(Microsoft.Extensions.DependencyInjection.IServiceCollection, object?)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: 'public static void TryAddActivatedKeyedSingleton<TService, TImplementation>(this IServiceCollection services, object? serviceKey) where TService : class where TImplementation : class, TService'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceKey
      type: System.Object
    typeParameters:
    - id: TService
    - id: TImplementation
    content.vb: Public Shared Sub TryAddActivatedKeyedSingleton(Of TService As Class, TImplementation As {Class, TService})(services As IServiceCollection, serviceKey As Object)
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton*
  nameWithType.vb: AutoActivationExtensions.TryAddActivatedKeyedSingleton(Of TService, TImplementation)(IServiceCollection, Object)
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton(Of TService, TImplementation)(Microsoft.Extensions.DependencyInjection.IServiceCollection, Object)
  name.vb: TryAddActivatedKeyedSingleton(Of TService, TImplementation)(IServiceCollection, Object)
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``0})
  commentId: M:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``0})
  id: TryAddActivatedKeyedSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object,System.Func{System.IServiceProvider,System.Object,``0})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions
  langs:
  - csharp
  - vb
  name: TryAddActivatedKeyedSingleton<TService>(IServiceCollection, object?, Func<IServiceProvider, object?, TService>)
  nameWithType: AutoActivationExtensions.TryAddActivatedKeyedSingleton<TService>(IServiceCollection, object?, Func<IServiceProvider, object?, TService>)
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton<TService>(Microsoft.Extensions.DependencyInjection.IServiceCollection, object?, System.Func<System.IServiceProvider, object?, TService>)
  type: Method
  assemblies:
  - Microsoft.Extensions.DependencyInjection.AutoActivation
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: 'public static void TryAddActivatedKeyedSingleton<TService>(this IServiceCollection services, object? serviceKey, Func<IServiceProvider, object?, TService> implementationFactory) where TService : class'
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: serviceKey
      type: System.Object
    - id: implementationFactory
      type: System.Func{System.IServiceProvider,System.Object,{TService}}
    typeParameters:
    - id: TService
    content.vb: Public Shared Sub TryAddActivatedKeyedSingleton(Of TService As Class)(services As IServiceCollection, serviceKey As Object, implementationFactory As Func(Of IServiceProvider, Object, TService))
  overload: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton*
  nameWithType.vb: AutoActivationExtensions.TryAddActivatedKeyedSingleton(Of TService)(IServiceCollection, Object, Func(Of IServiceProvider, Object, TService))
  fullName.vb: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton(Of TService)(Microsoft.Extensions.DependencyInjection.IServiceCollection, Object, System.Func(Of System.IServiceProvider, Object, TService))
  name.vb: TryAddActivatedKeyedSingleton(Of TService)(IServiceCollection, Object, Func(Of IServiceProvider, Object, TService))
references:
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateSingleton*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateSingleton
  isExternal: true
  href: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.html#Microsoft_Extensions_DependencyInjection_AutoActivationExtensions_ActivateSingleton__1_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: ActivateSingleton
  nameWithType: AutoActivationExtensions.ActivateSingleton
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateSingleton
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton
  isExternal: true
  href: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.html#Microsoft_Extensions_DependencyInjection_AutoActivationExtensions_AddActivatedSingleton__2_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Func_System_IServiceProvider___1__
  name: AddActivatedSingleton
  nameWithType: AutoActivationExtensions.AddActivatedSingleton
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedSingleton
- uid: System.Func{System.IServiceProvider,{TImplementation}}
  commentId: T:System.Func{System.IServiceProvider,``1}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<IServiceProvider, TImplementation>
  nameWithType: Func<IServiceProvider, TImplementation>
  fullName: System.Func<System.IServiceProvider, TImplementation>
  nameWithType.vb: Func(Of IServiceProvider, TImplementation)
  fullName.vb: System.Func(Of System.IServiceProvider, TImplementation)
  name.vb: Func(Of IServiceProvider, TImplementation)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - name: TImplementation
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - name: TImplementation
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{System.IServiceProvider,{TService}}
  commentId: T:System.Func{System.IServiceProvider,``0}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<IServiceProvider, TService>
  nameWithType: Func<IServiceProvider, TService>
  fullName: System.Func<System.IServiceProvider, TService>
  nameWithType.vb: Func(Of IServiceProvider, TService)
  fullName.vb: System.Func(Of System.IServiceProvider, TService)
  name.vb: Func(Of IServiceProvider, TService)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - name: TService
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - name: TService
  - name: )
- uid: System.Func{System.IServiceProvider,System.Object}
  commentId: T:System.Func{System.IServiceProvider,System.Object}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<IServiceProvider, object>
  nameWithType: Func<IServiceProvider, object>
  fullName: System.Func<System.IServiceProvider, object>
  nameWithType.vb: Func(Of IServiceProvider, Object)
  fullName.vb: System.Func(Of System.IServiceProvider, Object)
  name.vb: Func(Of IServiceProvider, Object)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton
  isExternal: true
  href: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.html#Microsoft_Extensions_DependencyInjection_AutoActivationExtensions_TryAddActivatedSingleton_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Type_
  name: TryAddActivatedSingleton
  nameWithType: AutoActivationExtensions.TryAddActivatedSingleton
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedSingleton
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateKeyedSingleton*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateKeyedSingleton
  isExternal: true
  href: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.html#Microsoft_Extensions_DependencyInjection_AutoActivationExtensions_ActivateKeyedSingleton__1_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Object_
  name: ActivateKeyedSingleton
  nameWithType: AutoActivationExtensions.ActivateKeyedSingleton
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.ActivateKeyedSingleton
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton
  isExternal: true
  href: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.html#Microsoft_Extensions_DependencyInjection_AutoActivationExtensions_AddActivatedKeyedSingleton__2_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Object_System_Func_System_IServiceProvider_System_Object___1__
  name: AddActivatedKeyedSingleton
  nameWithType: AutoActivationExtensions.AddActivatedKeyedSingleton
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.AddActivatedKeyedSingleton
- uid: System.Func{System.IServiceProvider,System.Object,{TImplementation}}
  commentId: T:System.Func{System.IServiceProvider,System.Object,``1}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<IServiceProvider, object, TImplementation>
  nameWithType: Func<IServiceProvider, object, TImplementation>
  fullName: System.Func<System.IServiceProvider, object, TImplementation>
  nameWithType.vb: Func(Of IServiceProvider, Object, TImplementation)
  fullName.vb: System.Func(Of System.IServiceProvider, Object, TImplementation)
  name.vb: Func(Of IServiceProvider, Object, TImplementation)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: TImplementation
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: TImplementation
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{System.IServiceProvider,System.Object,{TService}}
  commentId: T:System.Func{System.IServiceProvider,System.Object,``0}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<IServiceProvider, object, TService>
  nameWithType: Func<IServiceProvider, object, TService>
  fullName: System.Func<System.IServiceProvider, object, TService>
  nameWithType.vb: Func(Of IServiceProvider, Object, TService)
  fullName.vb: System.Func(Of System.IServiceProvider, Object, TService)
  name.vb: Func(Of IServiceProvider, Object, TService)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: TService
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: TService
  - name: )
- uid: System.Func{System.IServiceProvider,System.Object,System.Object}
  commentId: T:System.Func{System.IServiceProvider,System.Object,System.Object}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<IServiceProvider, object, object>
  nameWithType: Func<IServiceProvider, object, object>
  fullName: System.Func<System.IServiceProvider, object, object>
  nameWithType.vb: Func(Of IServiceProvider, Object, Object)
  fullName.vb: System.Func(Of System.IServiceProvider, Object, Object)
  name.vb: Func(Of IServiceProvider, Object, Object)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton
  isExternal: true
  href: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.html#Microsoft_Extensions_DependencyInjection_AutoActivationExtensions_TryAddActivatedKeyedSingleton_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Type_System_Object_
  name: TryAddActivatedKeyedSingleton
  nameWithType: AutoActivationExtensions.TryAddActivatedKeyedSingleton
  fullName: Microsoft.Extensions.DependencyInjection.AutoActivationExtensions.TryAddActivatedKeyedSingleton
